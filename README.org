# bpm-counter
# Automatically exported from code.google.com/p/bpm-counter
- English :: Timer for counting something regular, like the beats of music.
- Deutsch :: Zeitnehmer um etwas Regelmäßiges zu zählen, wie etwa Takte in der Musik.
- Francaise :: Chronométreur pour compter quelque chose reguliér, comme la mesure de la musique.

** ==English:==
The timer displays additionally some statistics of the counting precision and discards invalid or missing keystrokes for making the counts as independened as possible of input errors.  This is based on the time span between the first two strokes, these should be resonably accurate (within ± 20 % of the true average).  From then on its perfectly OK to pause and resume the count, the program returns a visual feedback for the invalid strokes.

The statistical foundation of the precision is thorough but assumes that the music's tempo remains constant, which is not always the case over the full length of a few pieces.

[[http://www.duenenhof-wilhelm.de/dieter/bpm-counter/bpm-counter.jpg]]

For running this python code out of the box you should have a Gnu/Linux system (Cygwin, the free Gnu/Linux environment in case of a Windows operating system) with a working python programming language and a curses terminal control library installation.  These prerequisites are normally fullfilled for any popular Gnu/Linux distribution, like Ubuntu, SuSE or Debian. 

[[http://www.duenenhof-wilhelm.de/dieter/bpm-counter/cygwin.jpg]]

** ==Deutsch:==
Das Programm zeigt zusätzlich Statistiken über die Genauigkeit der Zählung und prüft, ob Tasteneingaben ungültig oder vergessen wurden, um die Zählung möglichst unabhängig von Eingabefehlern zu machen.  Dies basiert auf der Zeitspanne zwischen den ersten zwei Tastendrücken, sie sollten einigermaßen genau sein (innerhalb ± 20 % des wahren Mittelwerts).  Danach ist es absolut i. O. eine Pause zu machen und die Zählung wieder auf zu nehmen, das Programm erzeugt eine visuelle Rückmeldung bei den ungültigen Anschlägen.

Die statistische Grundlage der Genauigkeit ist gründlich, aber nimmt an, dass das Tempo konstant bleibt, was nicht immer über die ganze Länge einiger Stücke gegeben ist.

Um den Python Code unmittelbar ausführen zu können dürfte jede populäre Gnu/Linux Distribution, wie Ubuntu, SuSE oder Debian hinreichend sein.  Unter dem Windows XP Betriebssystem klappt es auch für mich mit der freien Linux-Emulation "Cygwin", die unter Windows sowieso zu empfehlen ist. ;-)

** ==Francaise:==
Pardon, à ce moment c'est trop difficile pour moi.
